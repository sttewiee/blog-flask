# .github/workflows/deploy.yml
name: Build, Push and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    name: Build and Push Docker Image

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/flask-blog:latest

  deploy-to-dev:
    needs: build-and-push
    runs-on: ubuntu-latest
    name: Deploy to Development Server

    steps:
      - name: Deploy to Dev Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            #!/bin/bash
            set -e

            # Путь до директории на вашем сервере, где находится docker-compose.prod.yml
            DEPLOY_DIR=~/blog-flask/blog-flask-prod
            REPO_URL=git@github.com:username/blog-flask.git  # замените на ваш URL

            # 1) Если папки нет — клонируем
            if [ ! -d "$DEPLOY_DIR" ]; then
              echo "Directory $DEPLOY_DIR not found. Cloning repository..."
              git clone "$REPO_URL" "$DEPLOY_DIR"
            fi

            # 2) Переходим в папку и обновляем код до актуального состояния ветки main
            cd "$DEPLOY_DIR"
            git fetch origin
            git reset --hard origin/main

            # 3) Запускаем обновление контейнеров
            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d --force-recreate

            # 4) Если внутри контейнера нужен апгрейд БД
            docker-compose -f docker-compose.prod.yml exec web flask db upgrade

            echo "✅ Deployment completed successfully!"

name: Deploy to GCP

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: sonic-harbor-465608-v1
  REGION: europe-west4
  CLUSTER_NAME: blog-cluster

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      run: |
        python -m pytest test_app.py -v
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    
    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      
    - name: Install gke-gcloud-auth-plugin
      run: |
        gcloud components install gke-gcloud-auth-plugin
        echo "USE_GKE_GCLOUD_AUTH_PLUGIN=True" >> $GITHUB_ENV
    
    - name: Create Artifact Registry repository
      run: |
        gcloud artifacts repositories create blog-flask \
          --repository-format=docker \
          --location=${{ env.REGION }} \
          --description="Flask Blog Docker Repository" || echo "Repository already exists"
    
    - name: Configure Docker for GCP
      run: |
        gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev
    
    - name: Build and push Docker image
      run: |
        docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/blog-flask/blog-flask:${{ github.sha }} .
        docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/blog-flask/blog-flask:latest .
        docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/blog-flask/blog-flask:${{ github.sha }}
        docker push ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/blog-flask/blog-flask:latest
    
    - name: Create GKE Cluster
      run: |
        # Создаем кластер если не существует
        gcloud container clusters create ${{ env.CLUSTER_NAME }} \
          --region=${{ env.REGION }} \
          --num-nodes=1 \
          --machine-type=e2-micro \
          --disk-size=15 \
          --enable-autoscaling \
          --min-nodes=1 \
          --max-nodes=2 \
          --quiet || echo "Cluster already exists"
    
    - name: Deploy to GKE
      run: |
        # Получаем credentials
        gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --region ${{ env.REGION }}
        
        # Создаем namespace
        kubectl apply -f k8s/namespace.yaml
        
        # Пропускаем PostgreSQL - используем SQLite
        # kubectl apply -f k8s/postgres.yaml
        # kubectl wait --for=condition=available --timeout=600s deployment/postgres -n blog-dev
        
        # Обновляем образ в deployment манифесте с актуальным тегом
        sed -i "s|:latest|:${{ github.sha }}|g" k8s/deployment.yaml
        
        # Применяем приложение и сервис
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
        
        # Ждем готовности приложения
        kubectl rollout status deployment/flask-blog -n blog-dev --timeout=300s
        
        # Показываем статус
        kubectl get pods -n blog-dev
        kubectl get services -n blog-dev

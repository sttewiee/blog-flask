apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-shared
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-shared
  template:
    metadata:
      labels:
        app: prometheus-shared
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-data
          mountPath: /prometheus
        command:
        - /bin/prometheus
        - --config.file=/etc/prometheus/prometheus.yml
        - --storage.tsdb.path=/prometheus
        - --web.console.libraries=/etc/prometheus/console_libraries
        - --web.console.templates=/etc/prometheus/consoles
        - --storage.tsdb.retention.time=200h
        - --web.enable-lifecycle
        resources:
          requests:
            memory: 64Mi
            cpu: 25m
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config-shared
      - name: prometheus-data
        emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config-shared
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    rule_files:
      # - "first_rules.yml"
      # - "second_rules.yml"

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'flask-blog-prod'
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - blog-prod
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            regex: flask-blog-service
            action: keep
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            regex: 'true'
            action: keep
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_name

      - job_name: 'flask-blog-dev'
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - blog-dev
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            regex: flask-blog-service
            action: keep
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            regex: 'true'
            action: keep
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_name
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-shared-service
  namespace: monitoring
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
spec:
  type: LoadBalancer
  ports:
  - port: 9090
    targetPort: 9090
    protocol: TCP
  selector:
    app: prometheus-shared
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-shared
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana-shared
  template:
    metadata:
      labels:
        app: grafana-shared
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:latest
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin123"
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
        resources:
          requests:
            memory: 64Mi
            cpu: 25m
      volumes:
      - name: grafana-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-shared-service
  namespace: monitoring
  annotations:
    cloud.google.com/neg: '{"ingress":true}'
spec:
  type: LoadBalancer
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
  selector:
    app: grafana-shared

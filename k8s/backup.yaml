apiVersion: v1
kind: ConfigMap
metadata:
  name: backup-script
  namespace: blog-dev
data:
  backup.sh: |
    #!/bin/bash
    set -e
    
    # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    BACKUP_DIR="/backups"
    TIMESTAMP=$(date +%Y%m%d_%H%M%S)
    BACKUP_FILE="blog_backup_${TIMESTAMP}.sql"
    
    echo "üóÑÔ∏è –ù–∞—á–∏–Ω–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ PostgreSQL..."
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    pg_dump -h postgres-service -U postgres -d blog > "${BACKUP_DIR}/${BACKUP_FILE}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω
    if [ -f "${BACKUP_DIR}/${BACKUP_FILE}" ]; then
        echo "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: ${BACKUP_FILE}"
        
        # –°–∂–∏–º–∞–µ–º —Ñ–∞–π–ª –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞
        gzip "${BACKUP_DIR}/${BACKUP_FILE}"
        echo "‚úÖ –§–∞–π–ª —Å–∂–∞—Ç: ${BACKUP_FILE}.gz"
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π)
        find ${BACKUP_DIR} -name "blog_backup_*.sql.gz" -mtime +7 -delete
        echo "üßπ –°—Ç–∞—Ä—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ —É–¥–∞–ª–µ–Ω—ã"
        
        echo "üìä –†–∞–∑–º–µ—Ä —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏:"
        ls -lh "${BACKUP_DIR}/${BACKUP_FILE}.gz"
    else
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏!"
        exit 1
    fi

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-backup
  namespace: blog-dev
spec:
  schedule: "0 2 * * *"  # –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 2:00 UTC
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: postgres-backup
            image: postgres:15
            env:
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            command:
            - /bin/bash
            - /scripts/backup.sh
            volumeMounts:
            - name: backup-script
              mountPath: /scripts
            - name: backup-storage
              mountPath: /backups
            resources:
              requests:
                memory: 64Mi
                cpu: 50m
              limits:
                memory: 128Mi
                cpu: 100m
          volumes:
          - name: backup-script
            configMap:
              name: backup-script
              defaultMode: 0755
          - name: backup-storage
            persistentVolumeClaim:
              claimName: backup-pvc
          restartPolicy: OnFailure

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: backup-pvc
  namespace: blog-dev
spec:
  accessModes: [ReadWriteOnce]
  resources:
    requests:
      storage: 5Gi

---
# –†—É—á–Ω–∞—è job –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∑ –±—ç–∫–∞–ø–∞
apiVersion: batch/v1
kind: Job
metadata:
  name: postgres-restore
  namespace: blog-dev
spec:
  template:
    spec:
      containers:
      - name: postgres-restore
        image: postgres:15
        env:
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD
        - name: BACKUP_FILE
          value: "latest"  # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        command:
        - /bin/bash
        - -c
        - |
          echo "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ PostgreSQL..."
          
          if [ "$BACKUP_FILE" = "latest" ]; then
            BACKUP_FILE=$(ls -t /backups/blog_backup_*.sql.gz | head -1)
          else
            BACKUP_FILE="/backups/$BACKUP_FILE"
          fi
          
          echo "üìÅ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–π–ª: $BACKUP_FILE"
          
          if [ ! -f "$BACKUP_FILE" ]; then
            echo "‚ùå –§–∞–π–ª —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω!"
            exit 1
          fi
          
          # –†–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
          gunzip -c "$BACKUP_FILE" | psql -h postgres-service -U postgres -d blog
          
          echo "‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
        volumeMounts:
        - name: backup-storage
          mountPath: /backups
        resources:
          requests:
            memory: 64Mi
            cpu: 50m
          limits:
            memory: 128Mi
            cpu: 100m
      volumes:
      - name: backup-storage
        persistentVolumeClaim:
          claimName: backup-pvc
      restartPolicy: Never

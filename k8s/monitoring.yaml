---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-simple-config
  namespace: blog-dev
data:
  prometheus.yml: |
    global:
      scrape_interval: 30s
    
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      
      - job_name: 'flask-blog'
        static_configs:
          - targets: ['flask-blog-service.blog-dev.svc.cluster.local:80']
        metrics_path: '/metrics'
        scrape_interval: 30s

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-simple
  namespace: blog-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-simple
  template:
    metadata:
      labels:
        app: prometheus-simple
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.48.0
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus/'
          - '--web.console.libraries=/etc/prometheus/console_libraries'
          - '--web.console.templates=/etc/prometheus/consoles'
          - '--storage.tsdb.retention.time=7d'
        ports:
        - containerPort: 9090
        resources:
          requests:
            memory: 64Mi
            cpu: 25m
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 15
          periodSeconds: 5
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-simple-config

---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-simple-service
  namespace: blog-dev
spec:
  selector:
    app: prometheus-simple
  ports:
  - port: 9090
    targetPort: 9090
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-simple
  namespace: blog-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana-simple
  template:
    metadata:
      labels:
        app: grafana-simple
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:10.2.0
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin123"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
        - name: GF_SERVER_ROOT_URL
          value: "http://%(domain)s:%(http_port)s/"
        resources:
          requests:
            memory: 64Mi
            cpu: 50m
        livenessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /api/health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: grafana-simple-service
  namespace: blog-dev
spec:
  selector:
    app: grafana-simple
  ports:
  - port: 3000
    targetPort: 3000
  type: LoadBalancer
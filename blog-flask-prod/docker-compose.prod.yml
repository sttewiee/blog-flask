services:
  db:
    image: postgres:15
    restart: always
    env_file: .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - blog-network

  web:
    image: sttewie/flask-blog:latest
    restart: always
    env_file: .env
    depends_on:
      - db
    networks:
      - blog-network

  nginx:
    image: nginx:1.25-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    networks:
      - blog-network
    depends_on:
      - web

  certbot:
    image: certbot/certbot
    command: /bin/true
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot

  # --- НОВЫЕ СЕРВИСЫ МОНИТОРИНГА ---
  prometheus:
    image: prom/prometheus:v2.45.0
    restart: always
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - blog-network

  grafana:
    image: grafana/grafana:9.5.3
    restart: always
    ports:
      - "3000:3000" # Открываем порт для доступа к дашбордам
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - blog-network
    depends_on:
      - prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - blog-network

networks:
  blog-network:
    driver: bridge

volumes:
  pgdata:
  # Новые volumes для хранения данных мониторинга
  prometheus_data:
  grafana_data:
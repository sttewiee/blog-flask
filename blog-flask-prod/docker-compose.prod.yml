# ┌─────────────────────────────────────────────────────────────────────────────┐
# │  blog-flask-prod/docker-compose.prod.yml                                    │
# │  Полный файл для продакшен-сборки и запуска                                  │
# │  (лежит в папке blog-flask-prod рядом с .env.prod)                            │
# └─────────────────────────────────────────────────────────────────────────────┘

version: '3.8'

# -------------------------------------------------------------------
# 1) Подхватываем переменные окружения из .env.prod
# -------------------------------------------------------------------
env_file:
  - .env.prod

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - blog-network

  web:
    image: sttewie/flask-blog:latest
    restart: always
    environment:
      FLASK_ENV: production
      DATABASE_URL: postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
      SECRET_KEY: ${SECRET_KEY}
    depends_on:
      - db
    # ──────────────────────────────────────────────────────────────────
    # Заменили порт "80:5000" на "5000:5000", чтобы nginx на хосте
    # мог проксировать трафик без конфликта портов (80 уже занят nginx-ом).
    # ──────────────────────────────────────────────────────────────────
    ports:
      - "5000:5000"
    networks:
      - blog-network

networks:
  blog-network:
    driver: bridge

volumes:
  pgdata:

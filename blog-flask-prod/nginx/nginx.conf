# /home/gcpa4607/blog-flask/blog-flask-prod/nginx/nginx.conf
#
# ФИНАЛЬНЫЙ, БОЕВОЙ КОНФИГ ДЛЯ ПРОДАКШЕНА

# Базовый блок events, необходим для работы Nginx
events { worker_connections 1024; }

# Весь HTTP-трафик обрабатывается внутри этого главного блока
http {

    # --- СЕРВЕР ДЛЯ HTTP (ПОРТ 80) ---
    # Основная задача этого блока - перенаправлять все на HTTPS,
    # но при этом позволять Certbot обновлять сертификаты.
    server {
        listen 80;
        server_name lapikoff.duckdns.org; # Твой домен

        # Специальное правило для Certbot, чтобы он мог пройти проверку
        # при автоматическом обновлении сертификата в будущем.
        location /.well-known/acme-challenge/ {
            allow all;
            root /var/www/certbot;
        }

        # Все остальные запросы (на главную, на /login и т.д.)
        # принудительно перенаправляем на защищенную HTTPS-версию.
        location / {
            return 301 https://$host$request_uri;
        }
    }


    # --- ОСНОВНОЙ СЕРВЕР ДЛЯ HTTPS (ПОРТ 443) ---
    # Этот блок обрабатывает весь защищенный трафик твоего сайта.
    server {
        listen 443 ssl http2; # Включаем SSL и HTTP/2 для скорости
        server_name lapikoff.duckdns.org; # Твой домен

        # Пути к SSL-сертификатам, которые мы только что получили.
        # Nginx будет использовать их для шифрования трафика.
        ssl_certificate /etc/letsencrypt/live/lapikoff.duckdns.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/lapikoff.duckdns.org/privkey.pem;

        # Рекомендуемые настройки безопасности SSL
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers off;

        # Проксируем (перенаправляем) все запросы к нашему Flask-приложению,
        # которое работает в контейнере 'web' на порту 5000.
        location / {
            proxy_pass http://web:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}